#!/bin/bash

INFO='\033[1;34m'
RED='\033[0;31m'
RESET='\e[0m' # Reset

set -eu

# Get list of supported SDKs from the directory names in linux/usr/local/sdkinit
supported_sdks=($(ls -d /usr/local/sdkinit/* | xargs -n 1 basename| grep -v "\.files"))

# First argument is required
if [ $# -eq 0 ]; then
    echo -e "${RED}No SDK specified${RESET}"
    echo -e "Supported SDKs: ${INFO}${supported_sdks[@]}${RESET}"
    exit 1
fi


if [[ $1 == --* ]]; then
    action="${1:2}"
    # remove "-" from the action
    action="${action//-/}"
    shift
else
    action="install"
fi
extra_args="${@:2}"

function check_sdk_actions() {
    action=$1
    # if action is installed
    if [[ $action == "installed" ]]; then
        INSTALLED=""
        for sdk in ${supported_sdks[@]}; do
            /usr/local/sdkinit/${sdk} install-check && INSTALLED="${INSTALLED} ${sdk}"
        done
        echo -e "Installed SDKs:${INFO}${INSTALLED}${RESET}"
    else
        echo -e "${RED}Unsupported SDK action $action${RESET}"
        exit 1
    fi
}

sdk=${1:-}

# if sdk is not null
if [ -z "$sdk" ]; then
    check_sdk_actions $action
    exit 0
fi

# Check if the skd is supported
if [[ ! " ${supported_sdks[@]} " =~ " ${sdk} " ]]; then
    echo -e "Unsupported SDK: ${RED}${sdk}${RESET}"
    echo -e "Supported SDKs: ${INFO}${supported_sdks[@]}${RESET}"
    exit 1
fi

echo -e "Running action ${INFO}'$action $sdk'${RESET}"
/usr/local/sdkinit/${sdk} ${action} $extra_args
